ユーザーが別ユーザーをフォローする
ユーザーが別ユーザーのツイートにいいねする、ブックマークする、リツイートする
ユーザーが別ユーザーとダイレクトメッセージをする
ユーザーにフォロー、いいね、リツイートの通知をする
ユーザーは140文字のツイートできる

エンティティ
- ユーザー
- ツイート
- いいね
- ブックマーク
- リツイート
- フォロー
- 通知

リソースとイベントに分ける


リソース
- ユーザー
- いいね
- ブックマーク
- リツイート
- 

イベント
- ツイートする
- 通知する
- フォローする
-  



通知の処理の流れを言語化することで
データベースにどんな行が追加されるか理解できそう

フォローする
通知のデータが作成される（通知テーブルに行が追加される感じ）

どんな行が追加されれば相手に通知がいくか考える

まず、必要そうな属性を書き出す
自分のID
相手のID

いいねする必要な属性
自分のID
相手のID
ツイートIDjk


ユーザーに対してDMグループも複数あるため多対多の関係

大学の講義登録から考えると以下のようなテーブルを作る？

中間テーブル
user
group


user1に対してgroup1が紐づく形になる
